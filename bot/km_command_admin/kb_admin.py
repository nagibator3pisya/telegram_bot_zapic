from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder

# —á—Ç–æ –± –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∞–¥–º –ø–æ–Ω–µ–ª—å (text="‚öôÔ∏è –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å", callback_data="admin_panel")
def admin_keyboard():
    kb_Inline_main = [
        [InlineKeyboardButton(text="üìñ –û –Ω–∞—Å", callback_data="about_us")],
        [InlineKeyboardButton(text="üë§ –î–æ–±–∞–≤–∏—Ç—å –º–∞—Å—Ç–µ—Ä–∞", callback_data="profile")],
        [InlineKeyboardButton(text="üìù –ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞—è–≤–æ–∫", callback_data="application_admin")],
        [InlineKeyboardButton(text="üìö –î–æ–±–∞–≤–∏—Ç—å —É—Å–ª—É–≥–∏ —Å–µ—Ä–≤–∏—Å–∞", callback_data="services_admin")],
        [InlineKeyboardButton(text="üè† –ù–∞ –≥–ª–∞–≤–Ω—É—é", callback_data="home")]
    ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=kb_Inline_main)
    return keyboard




def get_pagination_keyboard_admin(current_page: int, total_pages: int):
    # –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–ª—è –∫–Ω–æ–ø–æ–∫
    keyboard_buttons = []

    # –°–æ–∑–¥–∞–µ–º —Ä—è–¥ –¥–ª—è –∫–Ω–æ–ø–æ–∫
    button_row = []

    # –ö–Ω–æ–ø–∫–∞ "–ú–µ–Ω—é"


    # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥", –µ—Å–ª–∏ —Ç–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –ø–µ—Ä–≤–∞—è
    if current_page > 0:
        button_row.append(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"page_{current_page - 1}"))

    button_row.append(InlineKeyboardButton(text='–ú–µ–Ω—é', callback_data="home_admin"))
    # –ö–Ω–æ–ø–∫–∞ "–í–ø–µ—Ä–µ–¥", –µ—Å–ª–∏ —Ç–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –ø–æ—Å–ª–µ–¥–Ω—è—è
    if current_page < total_pages - 1:
        button_row.append(InlineKeyboardButton(text="–í–ø–µ—Ä–µ–¥ ‚û°Ô∏è", callback_data=f"page_{current_page + 1}"))

    # –î–æ–±–∞–≤–ª—è–µ–º —Ä—è–¥ –∫–Ω–æ–ø–æ–∫ –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    keyboard_buttons.append(button_row)

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
    keyboard = InlineKeyboardMarkup(inline_keyboard=keyboard_buttons)
    return keyboard



def paginate_admin(items, page_size, page):
    start = page * page_size
    end = start + page_size
    return items[start:end]